   <jdbc-collection name="PostgreSQL">
      <rrd step="300">
         <rra>RRA:AVERAGE:0.5:1:2016</rra>
         <rra>RRA:AVERAGE:0.5:12:1488</rra>
         <rra>RRA:AVERAGE:0.5:288:366</rra>
         <rra>RRA:MAX:0.5:288:366</rra>
         <rra>RRA:MIN:0.5:288:366</rra>
      </rrd>
      <queries>
         <query name="pg_tablespace_size" recheckInterval="0" ifType="all" resourceType="pgTableSpace" instance-column="spcname">
            <statement>
               <queryString>
                    SELECT spcname, pg_tablespace_size(pg_tablespace.spcname) AS ts_size
                    FROM pg_tablespace
                    </queryString>
            </statement>
            <columns>
               <column name="spcname" data-source-name="spcname" type="string" alias="spcname"/>
               <column name="ts_size" data-source-name="ts_size" type="gauge" alias="ts_size"/>
            </columns>
         </query>
         <query name="pg_stat_database" recheckInterval="0" ifType="all" resourceType="pgDatabase" instance-column="datname">
            <statement>
               <queryString>
                    SELECT
                        datname,
                        numbackends,
                        xact_commit,
                        xact_rollback,
                        blks_read,
                        blks_hit,
                        pg_database_size(pg_stat_database.datname) AS db_size,
                        tup_returned,
                        tup_fetched,
                        tup_inserted,
                        tup_updated,
                        tup_deleted,
                        conflicts,
                        temp_files,
                        temp_bytes,
                        deadlocks,
                        blk_read_time,
                        blk_write_time
                    FROM
                        pg_stat_database
                    WHERE
                        datname NOT IN ('template0', 'template1')
                    </queryString>
            </statement>
            <columns>
               <column name="datname" data-source-name="datname" type="string" alias="datname"/>
               <column name="numbackends" data-source-name="numbackends" type="gauge" alias="numbackends"/>
               <column name="xact_commit" data-source-name="xact_commit" type="counter" alias="xact_commit"/>
               <column name="xact_rollback" data-source-name="xact_rollback" type="counter" alias="xact_rollback"/>
               <column name="blks_read" data-source-name="blks_read" type="counter" alias="blks_read"/>
               <column name="blks_hit" data-source-name="blks_hit" type="counter" alias="blks_hit"/>
               <column name="db_size" data-source-name="db_size" type="gauge" alias="db_size"/>
               <column name="tup_returned" data-source-name="tup_returned" type="counter" alias="tup_returned"/>
               <column name="tup_fetched" data-source-name="tup_fetched" type="counter" alias="tup_fetched"/>
               <column name="tup_inserted" data-source-name="tup_inserted" type="counter" alias="tup_inserted"/>
               <column name="tup_updated" data-source-name="tup_updated" type="counter" alias="tup_updated"/>
               <column name="tup_deleted" data-source-name="tup_deleted" type="counter" alias="tup_deleted"/>
               <column name="conflicts" data-source-name="conflicts" type="counter" alias="conflicts"/>
               <column name="temp_files" data-source-name="temp_files" type="counter" alias="temp_files"/>
               <column name="temp_bytes" data-source-name="temp_bytes" type="counter" alias="temp_bytes"/>
               <column name="deadlocks" data-source-name="deadlocks" type="counter" alias="deadlocks"/>
               <column name="blk_read_time" data-source-name="blk_read_time" type="counter" alias="blk_read_time"/>
               <column name="blk_write_time" data-source-name="blk_write_time" type="counter" alias="blk_write_time"/>
            </columns>
         </query>
         <query name="pg_stat_db_conf" recheckInterval="0" ifType="all" resourceType="pgStatDbConf" instance-column="datname">
            <statement>
               <queryString>
                    select
                        datname,
                        confl_tablespace,
                        confl_lock,
                        confl_snapshot,
                        confl_bufferpin,
                        confl_deadlock
                    from
                        pg_stat_database_conflicts
                    WHERE
                        datname NOT IN ('template0', 'template1');
                    </queryString>
            </statement>
            <columns>
               <column name="datname" data-source-name="datname" type="string" alias="datname"/>
               <column name="confl_tablespace" data-source-name="confl_tablespace" type="gauge" alias="confl_tablespace"/>
               <column name="confl_lock" data-source-name="confl_lock" type="gauge" alias="confl_lock"/>
               <column name="confl_snapshot" data-source-name="confl_snapshot" type="gauge" alias="confl_snapshot"/>
               <column name="confl_bufferpin" data-source-name="confl_bufferpin" type="gauge" alias="confl_bufferpin"/>
               <column name="confl_deadlock" data-source-name="confl_deadlock" type="gauge" alias="confl_deadlock"/>
            </columns>
         </query>
         <query name="pgStatActTotal" recheckInterval="0" ifType="all">
            <statement>
               <queryString>select count(*) as pgStatActTotal from pg_stat_activity; </queryString>
            </statement>
            <columns>
               <column name="pgStatActTotal" data-source-name="pgStatActTotal" type="gauge" alias="pgStatActTotal"/>
            </columns>
         </query>
         <query name="pgStatActIdle" recheckInterval="0" ifType="all">
            <statement>
               <queryString>select count(*) as pgStatActIdle from pg_stat_activity where state= 'idle'; </queryString>
            </statement>
            <columns>
               <column name="pgStatActIdle" data-source-name="pgStatActIdle" type="gauge" alias="pgStatActIdle"/>
            </columns>
         </query>
         <query name="pgStatActIdleTr" recheckInterval="0" ifType="all">
            <statement>
               <queryString>select count(*) as pgStatActIdleTr from pg_stat_activity where state= 'idle in transaction'; </queryString>
            </statement>
            <columns>
               <column name="pgStatActIdleTr" data-source-name="pgStatActIdleTr" type="gauge" alias="pgStatActIdleTr"/>
            </columns>
         </query>
         <query name="pgStatActIdleTrAb" recheckInterval="0" ifType="all">
            <statement>
               <queryString>select count(*) as pgStatActIdleTrAb from pg_stat_activity where state= 'idle in transaction (aborted)'; </queryString>
            </statement>
            <columns>
               <column name="pgStatActIdleTrAb" data-source-name="pgStatActIdleTrAb" type="gauge" alias="pgStatActIdleTrAb"/>
            </columns>
         </query>
         <query name="pgStatActAct" recheckInterval="0" ifType="all">
            <statement>
               <queryString>select count(*) as pgStatActAct from pg_stat_activity where state= 'active'; </queryString>
            </statement>
            <columns>
               <column name="pgStatActAct" data-source-name="pgStatActAct" type="gauge" alias="pgStatActAct"/>
            </columns>
         </query>
         <query name="pgStatActFp" recheckInterval="0" ifType="all">
            <statement>
               <queryString>select count(*) as pgStatActFp from pg_stat_activity where state= 'fastpath'; </queryString>
            </statement>
            <columns>
               <column name="pgStatActFp" data-source-name="pgStatActFp" type="gauge" alias="pgStatActFp"/>
            </columns>
         </query>
         <query name="pgStatActDis" recheckInterval="0" ifType="all">
            <statement>
               <queryString>select count(*) as pgStatActDis from pg_stat_activity where state= 'disabled'; </queryString>
            </statement>
            <columns>
               <column name="pgStatActDis" data-source-name="pgStatActDis" type="gauge" alias="pgStatActDis"/>
            </columns>
         </query>
         <query name="pgStatActIdleTr15" ifType="ignore">
            <statement>
              <queryString>select count(*) pgStatActIdleTr15 from pg_stat_activity where state = 'idle in transaction' and age(clock_timestamp() at time zone 'utc', query_start at time zone 'utc') &gt; (interval '15 minutes');</queryString>
            </statement>
            <columns>
               <column name="pgStatActIdleTr15" data-source-name="pgStatActIdleTr15" alias="pgStatActIdleTr15" type="gauge"/>
            </columns>
          </query>
         <query name="pgStatActIdleTr30" ifType="ignore">
            <statement>
              <queryString>select count(*) pgStatActIdleTr30 from pg_stat_activity where state = 'idle in transaction' and age(clock_timestamp() at time zone 'utc', query_start at time zone 'utc') &gt; (interval '30 minutes');</queryString>
            </statement>
            <columns>
               <column name="pgStatActIdleTr30" data-source-name="pgStatActIdleTr30" alias="pgStatActIdleTr30" type="gauge"/>
            </columns>
          </query>
         <query name="pgStatActIdleTr60" ifType="ignore">
            <statement>
              <queryString>select count(*) pgStatActIdleTr60 from pg_stat_activity where state = 'idle in transaction' and age(clock_timestamp() at time zone 'utc', query_start at time zone 'utc') &gt; (interval '60 minutes');</queryString>
            </statement>
            <columns>
               <column name="pgStatActIdleTr60" data-source-name="pgStatActIdleTr60" alias="pgStatActIdleTr60" type="gauge"/>
            </columns>
          </query>
          <query name="pgStatExclLck60" ifType="ignore">
                <statement>
                    <queryString>SELECT count(*) as pgStatExclLck60 FROM pg_stat_activity a JOIN pg_locks l ON l.pid = a.pid JOIN pg_class c ON c.oid = l.relation where mode = 'RowExclusiveLock' and query_start &lt; (current_timestamp at time zone 'utc' - interval '60 minutes') and position('autovacuum:' in a.query) != 1;</queryString>
                </statement>
                <columns>
                    <column name="pgStatExclLck60" data-source-name="pgStatExclLck60" alias="pgStatExclLck60" type="gauge"/>
                </columns>
          </query>
          <query name="pguptime" ifType="ignore">
                <statement>
                    <queryString>select extract(epoch from current_timestamp - pg_postmaster_start_time()) as pguptime</queryString>
                </statement>
                <columns>
                    <column name="pguptime" data-source-name="pguptime" alias="pguptime" type="gauge"/>
                </columns>
          </query>
      </queries>
   </jdbc-collection>
